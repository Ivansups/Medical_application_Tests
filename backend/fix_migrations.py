#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏
"""

import os
import subprocess
import sys

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"\nüîß {description}")
    print(f"–ö–æ–º–∞–Ω–¥–∞: {command}")
    
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
            if result.stdout.strip():
                print(f"–í—ã–≤–æ–¥: {result.stdout.strip()}")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞!")
            print(f"–û—à–∏–±–∫–∞: {result.stderr.strip()}")
            return False
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def fix_docker_migrations():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ Docker"""
    print("\n" + "="*60)
    print("üê≥ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ò–ì–†–ê–¶–ò–ô –í DOCKER")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –≤ Docker
    print("\nüìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
    run_command(
        "docker exec medical_tests_db psql -U postgres -d medical_application -c 'SELECT * FROM alembic_version;'",
        "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –≤ Docker"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é –º–∏–≥—Ä–∞—Ü–∏–π
    run_command(
        "source venv/bin/activate && alembic heads",
        "–ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ Docker
    print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –≤ Docker...")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Docker
    env_content = """
DATABASE_URL=postgresql+psycopg://postgres:3891123@localhost:5432/medical_application
POSTGRES_USER=postgres
POSTGRES_PASSWORD=3891123
POSTGRES_DB=medical_application
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
"""
    
    with open(".env.docker", "w") as f:
        f.write(env_content.strip())
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    success = run_command(
        "source venv/bin/activate && DATABASE_URL=postgresql+psycopg://postgres:3891123@localhost:5432/medical_application alembic upgrade head",
        "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏"
    )
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    os.remove(".env.docker")
    
    if success:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        run_command(
            "docker exec medical_tests_db psql -U postgres -d medical_application -c 'SELECT * FROM alembic_version;'",
            "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏"
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        run_command(
            "docker exec medical_tests_db psql -U postgres -d medical_application -c '\dt'",
            "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
        )
    
    return success

def fix_local_migrations():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("\n" + "="*60)
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –õ–û–ö–ê–õ–¨–ù–´–• –ú–ò–ì–†–ê–¶–ò–ô")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ª–æ–∫–∞–ª—å–Ω–∞—è PostgreSQL
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π PostgreSQL...")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
    result = subprocess.run(
        "psql -U postgres -d medical_application -c 'SELECT version();'",
        shell=True, capture_output=True, text=True
    )
    
    if result.returncode != 0:
        print("‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω–∞—è PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PostgreSQL –ª–æ–∫–∞–ª—å–Ω–æ")
        print("   2. –°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: createdb -U postgres medical_application")
        print("   3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ Docker –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")
        return False
    
    print("‚úÖ –õ–æ–∫–∞–ª—å–Ω–∞—è PostgreSQL –¥–æ—Å—Ç—É–ø–Ω–∞")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    success = run_command(
        "source venv/bin/activate && alembic upgrade head",
        "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π"
    )
    
    if success:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        run_command(
            "source venv/bin/activate && alembic current",
            "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏"
        )
        
        run_command(
            "source venv/bin/activate && alembic check",
            "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π"
        )
    
    return success

def create_migration_guide():
    """–°–æ–∑–¥–∞—Ç—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –º–∏–≥—Ä–∞—Ü–∏—è–º"""
    print("\n" + "="*60)
    print("üìö –°–û–ó–î–ê–ù–ò–ï –†–£–ö–û–í–û–î–°–¢–í–ê –ü–û –ú–ò–ì–†–ê–¶–ò–Ø–ú")
    print("="*60)
    
    guide_content = """# –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –º–∏–≥—Ä–∞—Ü–∏—è–º

## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### 1. –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
```bash
# –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
source venv/bin/activate

# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
alembic current
alembic history

# –û–±–Ω–æ–≤–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
alembic upgrade head

# –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é
alembic revision --autogenerate -m "–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
alembic upgrade head
```

### 2. Docker —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
```bash
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
docker-compose up -d

# –û–±–Ω–æ–≤–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ Docker
DATABASE_URL=postgresql+psycopg://postgres:3891123@localhost:5432/medical_application alembic upgrade head

# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—ã
docker exec medical_tests_db psql -U postgres -d medical_application -c '\\dt'
```

### 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
```bash
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
python3 check_migrations.py

# –ò–ª–∏ –≤—Ä—É—á–Ω—É—é
alembic current    # –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è
alembic heads      # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤–µ—Ä—Å–∏–∏
alembic check      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
```

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–∏–≥—Ä–∞—Ü–∏–π

### –¢–µ–∫—É—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã:
- `users` - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–∏—Å—Ç–µ–º—ã
- `tests` - –¢–µ—Å—Ç—ã
- `questions` - –í–æ–ø—Ä–æ—Å—ã –≤ —Ç–µ—Å—Ç–∞—Ö
- `test_attempts` - –ü–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
- `user_answers` - –û—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

### –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: `84943c10d7a0`

## –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º

### –ü—Ä–æ–±–ª–µ–º–∞: "Target database is not up to date"
**–†–µ—à–µ–Ω–∏–µ:**
```bash
alembic upgrade head
```

### –ü—Ä–æ–±–ª–µ–º–∞: "Can't locate revision identified by"
**–†–µ—à–µ–Ω–∏–µ:**
```bash
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Å—Ç–æ—Ä–∏—é
alembic history

# –ï—Å–ª–∏ –Ω—É–∂–Ω–æ, –æ—Ç–∫–∞—Ç–∏—Ç–µ—Å—å –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏
alembic downgrade <revision_id>
```

### –ü—Ä–æ–±–ª–µ–º–∞: –ú–æ–¥–µ–ª–∏ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è
**–†–µ—à–µ–Ω–∏–µ:**
```bash
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º–ø–æ—Ä—Ç—ã
python -c "from app.db.models import *; print('OK')"

# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –º–æ–¥–µ–ª–∏ –≤ __init__.py
```

## –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

```bash
# –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏
alembic history --verbose

# –ü—Ä–æ—Å–º–æ—Ç—Ä SQL –±–µ–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
alembic upgrade head --sql

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
alembic revision -m "–û–ø–∏—Å–∞–Ω–∏–µ"

# –û—Ç–∫–∞—Ç –Ω–∞ –æ–¥–Ω—É –≤–µ—Ä—Å–∏—é
alembic downgrade -1

# –û—Ç–∫–∞—Ç –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏
alembic downgrade <revision_id>
```

## –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

–î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:
```bash
export DATABASE_URL=postgresql+psycopg://postgres:3891123@localhost:5432/medical_application
```

–î–ª—è Docker:
```bash
export DATABASE_URL=postgresql+psycopg://postgres:3891123@db:5432/medical_application
```
"""
    
    with open("MIGRATION_GUIDE.md", "w") as f:
        f.write(guide_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: MIGRATION_GUIDE.md")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –° –ú–ò–ì–†–ê–¶–ò–Ø–ú–ò")
    print("="*60)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Docker –º–∏–≥—Ä–∞—Ü–∏–∏
    docker_ok = fix_docker_migrations()
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    local_ok = fix_local_migrations()
    
    # –°–æ–∑–¥–∞–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
    create_migration_guide()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "="*60)
    print("üìã –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢")
    print("="*60)
    
    if docker_ok:
        print("‚úÖ Docker –º–∏–≥—Ä–∞—Ü–∏–∏: –ò–°–ü–†–ê–í–õ–ï–ù–´")
    else:
        print("‚ùå Docker –º–∏–≥—Ä–∞—Ü–∏–∏: –ü–†–û–ë–õ–ï–ú–´")
    
    if local_ok:
        print("‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏: –ò–°–ü–†–ê–í–õ–ï–ù–´")
    else:
        print("‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏: –¢–†–ï–ë–£–Æ–¢ –ù–ê–°–¢–†–û–ô–ö–ò")
    
    print("\nüìö –°–æ–∑–¥–∞–Ω–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: MIGRATION_GUIDE.md")
    print("\nüí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python3 check_migrations.py")

if __name__ == "__main__":
    main()
